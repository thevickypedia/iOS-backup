name: Temporary build for version check

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        platform:
          - build_for: Linux-x86_64
            os: linux-amd64

          - build_for: Windows-x86_64
            os: windows-amd64

          - build_for: macOS-x86_64
            os: darwin-amd64

    name: Initiate build for ${{ matrix.platform.build_for }}
    runs-on: ${{ matrix.platform.os }}
    permissions:
      contents: write

    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Update Rust
        run: |
          printf '*%.0s' {1..60} && printf "\n"
          echo "Existing rust version: $(rustc --version)"
          printf '*%.0s' {1..60} && printf "\n\n"
          rustup update && printf "\n"
          printf '*%.0s' {1..60} && printf "\n"
          echo "Updated rust version: $(rustc --version)"
          printf '*%.0s' {1..60} && printf "\n"
        shell: bash

      - name: Install OpenSSL static for Windows
        # https://github.com/sfackler/rust-openssl/issues/1086
        if: startsWith(matrix.platform.os, 'windows')
        run: |
          if (-Not (Test-Path -Path \Tools)) {
            mkdir \Tools
          }
          cd \Tools
          if (-Not (Test-Path -Path .\vcpkg)) {
            git clone https://github.com/Microsoft/vcpkg.git
          }
          cd vcpkg
          echo ("vcpkg_dir=" + $pwd) >> $env:GITHUB_ENV
          if (-Not (Test-Path -Path .\vcpkg.exe)) {
            .\bootstrap-vcpkg.bat
          }
          .\vcpkg.exe install openssl:x64-windows-static
        shell: pwsh

      - name: Build
        run: |
          if [[ "${{ matrix.platform.os }}" =~ ^windows ]]; then
            echo "Setting vcpkg env vars for OpenSSL in Windows"
            export OPENSSL_DIR="${{ env.vcpkg_dir }}\installed\x64-windows-static"
            export OPENSSL_STATIC="Yes"
            export VCPKG_ROOT="${{ env.vcpkg_dir }}\installed\x64-windows-static"
          fi
          cargo build --release
        shell: bash

      - name: Run tests
        run: |
          if [[ "${{ matrix.platform.os }}" =~ ^windows ]]; then
            echo "Setting vcpkg env vars for OpenSSL in Windows"
            export OPENSSL_DIR="${{ env.vcpkg_dir }}\installed\x64-windows-static"
            export OPENSSL_STATIC="Yes"
            export VCPKG_ROOT="${{ env.vcpkg_dir }}\installed\x64-windows-static"
          fi
          cargo test --no-run
        shell: bash
